{"remainingRequest":"/opt/lampp/htdocs/web/puzzles2/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/web/puzzles2/node_modules/eslint-loader/index.js??ref--13-0!/opt/lampp/htdocs/web/puzzles2/src/store/index.js","dependencies":[{"path":"/opt/lampp/htdocs/web/puzzles2/src/store/index.js","mtime":1577694906115},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCAqIGFzIGFwcCBmcm9tICcuLy4uL2FwcC5qcyc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgY2FydENvdW50OiAwLAogICAgcHJvZHVjdHM6IG51bGwKICB9LAogIC8vIE11dGF0aW9ucyBhcmUgdXNlZCB0byBjaGFuZ2Ugc3RhdGUKICAvLyBNdXRhdGlvbnMgY2FuIG5vdCBiZSBkaXJlY3RseSBjYWxsZWQ7IHlvdSBjb21taXQgdGhlbSwgZS5nLiBzdG9yZS5jb21taXQoJ3NldFByb2R1Y3RzJykKICAvLyBNdXRhdGlvbnMgcmVjZWl2ZSB0aGUgc3RhdGUgYXMgdGhlIGZpcnN0IGFyZ3VtZW50CiAgLy8gTXV0YXRpb25zIGNhbiByZWNlaXZlIGEgc2Vjb25kIGFyZ3VtZW50LCB0aGUgcGF5bG9hZAogIC8vIE11dGF0aW9ucyBtdXN0IGJlIHN5bmNocm9ub3VzCiAgbXV0YXRpb25zOiB7CiAgICBzZXRDYXJ0Q291bnQ6IGZ1bmN0aW9uIHNldENhcnRDb3VudChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5jYXJ0Q291bnQgPSBwYXlsb2FkOwogICAgfSwKICAgIHVwZGF0ZUNhcnRDb3VudDogZnVuY3Rpb24gdXBkYXRlQ2FydENvdW50KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmNhcnRDb3VudCArPSBwYXlsb2FkOwogICAgfSwKICAgIHNldFByb2R1Y3RzOiBmdW5jdGlvbiBzZXRQcm9kdWN0cyhzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5wcm9kdWN0cyA9IHBheWxvYWQ7CiAgICB9LAogICAgYWRkUHJvZHVjdDogZnVuY3Rpb24gYWRkUHJvZHVjdChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBfLm1lcmdlKHN0YXRlLnByb2R1Y3RzLCBwYXlsb2FkKTsKICAgIH0KICB9LAogIC8vIEFjdGlvbnMgd2lsbCBub3QgbXV0YXRlIHN0YXRlOyBpbnN0ZWFkIHRoZXkgd2lsbCBjb21taXQgbXV0YXRpb25zIHRvIG11dGF0ZSB0aGUgc3RhdGUKICAvLyBBY3Rpb25zIGNhbiBjb250YWluIGFyYml0cmFyeSBhc3luY2hyb25vdXMgb3BlcmF0aW9ucwogIC8vIEFjdGlvbnMgcmVjZWl2ZSBhIGNvbnRleHQgb2JqZWN0IHdoaWNoIGV4cG9zZXMgdGhlIHNhbWUgc2V0IG9mIG1ldGhvZHMvcHJvcGVydGllcyBvbiB0aGUgc3RvcmUgaW5zdGFuY2UKICAvLyAgICAgZS5nLiBjb250ZXh0LmNvbW1pdCwgY29udGV4dC5zdGF0ZSwgY29udGV4dC5nZXR0ZXJzCiAgLy8gQWN0aW9ucyBhcmUgdHJpZ2dlcmVkIHdpdGggdGhlIHN0b3JlLmRpc3BhdGNoIG1ldGhvZAogIC8vICAgICBTZWUgQXBwLnZ1ZSBmb3Igd2hlcmUgdGhpcyBpcyBkaXNwYXRjaGVkIGFsYSB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2V0UHJvZHVjdHMnKTsKICBhY3Rpb25zOiB7CiAgICBzZXRQcm9kdWN0czogZnVuY3Rpb24gc2V0UHJvZHVjdHMoY29udGV4dCkgewogICAgICBhcHAuYXhpb3MuZ2V0KGFwcC5jb25maWcuYXBpICsgJ3Byb2R1Y3RzLmpzb24nKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIC8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzM5MTU2NTMzL2ZpcmViYXNlLWRhdGFiYXNlLXJldHVybnMtbnVsbC1hdC1iZWdpbm5pbmctb2YtZWFjaC1uZXctbm9kZQogICAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRQcm9kdWN0cycsIHJlc3BvbnNlLmRhdGEpOwogICAgICB9KTsKICAgIH0KICB9LAogIC8vIEdldHRlcnMgYXJlIHVzZWQgd2hlbiB3ZSB3YW50IHRvIHRvIGNvbXB1dGUgZGVyaXZlZCBzdGF0ZSBiYXNlZCBvbiBzdG9yZSBzdGF0ZQogIC8vICJjb21wdXRlZCBwcm9wZXJ0aWVzIGZvciBzdG9yZXMiCiAgLy8gQSBnZXR0ZXIncyByZXN1bHQgaXMgY2FjaGVkIGJhc2VkIG9uIGl0cyBkZXBlbmRlbmNpZXMsIGFuZCB3aWxsIG9ubHkgcmUtZXZhbHVhdGUgd2hlbiAKICAvLyBzb21lIG9mIGl0cyBkZXBlbmRlbmNpZXMgaGF2ZSBjaGFuZ2VkLgogIC8vIEdldHRlcnMgd2lsbCByZWNlaXZlIHRoZSBzdGF0ZSBhcyB0aGVpciAxc3QgYXJndW1lbnQKICBnZXR0ZXJzOiB7CiAgICAvLyBodHRwczovL3Z1ZXgudnVlanMub3JnL2d1aWRlL2dldHRlcnMuaHRtbCNtZXRob2Qtc3R5bGUtYWNjZXNzCiAgICBnZXRQcm9kdWN0QnlTbHVnOiBmdW5jdGlvbiBnZXRQcm9kdWN0QnlTbHVnKHN0YXRlKSB7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoc2x1ZykgewogICAgICAgIHJldHVybiBfLmZpbmQoc3RhdGUucHJvZHVjdHMsIHsKICAgICAgICAgICdzbHVnJzogc2x1ZwogICAgICAgIH0pOyAvL3JldHVybiBzdGF0ZS5wcm9kdWN0cy5maW5kKHByb2R1Y3QgPT4gcHJvZHVjdC5pZCA9PSBpZCk7CiAgICAgIH07CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/opt/lampp/htdocs/web/puzzles2/src/store/index.js"],"names":["Vue","Vuex","app","use","Store","state","cartCount","products","mutations","setCartCount","payload","updateCartCount","setProducts","addProduct","_","merge","actions","context","axios","get","config","api","then","response","commit","data","getters","getProductBySlug","slug","find"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE,CADR;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GADmB;AAK1B;AACA;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YADO,wBACMJ,KADN,EACaK,OADb,EACsB;AACzBL,MAAAA,KAAK,CAACC,SAAN,GAAkBI,OAAlB;AACH,KAHM;AAIPC,IAAAA,eAJO,2BAISN,KAJT,EAIgBK,OAJhB,EAIyB;AAC5BL,MAAAA,KAAK,CAACC,SAAN,IAAmBI,OAAnB;AACH,KANM;AAOPE,IAAAA,WAPO,uBAOKP,KAPL,EAOYK,OAPZ,EAOqB;AACxBL,MAAAA,KAAK,CAACE,QAAN,GAAiBG,OAAjB;AACH,KATM;AAUPG,IAAAA,UAVO,sBAUIR,KAVJ,EAUWK,OAVX,EAUoB;AACvBI,MAAAA,CAAC,CAACC,KAAF,CAAQV,KAAK,CAACE,QAAd,EAAwBG,OAAxB;AACH;AAZM,GAVe;AAwB1B;AACA;AACA;AACA;AACA;AACA;AACAM,EAAAA,OAAO,EAAE;AACLJ,IAAAA,WADK,uBACOK,OADP,EACgB;AACjBf,MAAAA,GAAG,CAACgB,KAAJ,CAAUC,GAAV,CAAcjB,GAAG,CAACkB,MAAJ,CAAWC,GAAX,GAAiB,eAA/B,EAAgDC,IAAhD,CAAqD,UAAAC,QAAQ,EAAI;AAC7D;AACAN,QAAAA,OAAO,CAACO,MAAR,CAAe,aAAf,EAA8BD,QAAQ,CAACE,IAAvC;AACH,OAHD;AAIH;AANI,GA9BiB;AAsC1B;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,EAAE;AACL;AACAC,IAAAA,gBAFK,4BAEYtB,KAFZ,EAEmB;AACpB,aAAO,UAAUuB,IAAV,EAAgB;AACnB,eAAOd,CAAC,CAACe,IAAF,CAAOxB,KAAK,CAACE,QAAb,EAAuB;AAAE,kBAAQqB;AAAV,SAAvB,CAAP,CADmB,CAEnB;AACH,OAHD;AAIH;AAPI;AA3CiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport * as app from './../app.js';\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    state: {\n        cartCount: 0,\n        products: null,\n    },\n    // Mutations are used to change state\n    // Mutations can not be directly called; you commit them, e.g. store.commit('setProducts')\n    // Mutations receive the state as the first argument\n    // Mutations can receive a second argument, the payload\n    // Mutations must be synchronous\n    mutations: {\n        setCartCount(state, payload) {\n            state.cartCount = payload;\n        },\n        updateCartCount(state, payload) {\n            state.cartCount += payload;\n        },\n        setProducts(state, payload) {\n            state.products = payload;\n        },\n        addProduct(state, payload) {\n            _.merge(state.products, payload)\n        }\n    },\n    // Actions will not mutate state; instead they will commit mutations to mutate the state\n    // Actions can contain arbitrary asynchronous operations\n    // Actions receive a context object which exposes the same set of methods/properties on the store instance\n    //     e.g. context.commit, context.state, context.getters\n    // Actions are triggered with the store.dispatch method\n    //     See App.vue for where this is dispatched ala this.$store.dispatch('setProducts');\n    actions: {\n        setProducts(context) {\n            app.axios.get(app.config.api + 'products.json').then(response => {\n                // https://stackoverflow.com/questions/39156533/firebase-database-returns-null-at-beginning-of-each-new-node\n                context.commit('setProducts', response.data)\n            });\n        }\n    },\n    // Getters are used when we want to to compute derived state based on store state\n    // \"computed properties for stores\"\n    // A getter's result is cached based on its dependencies, and will only re-evaluate when \n    // some of its dependencies have changed.\n    // Getters will receive the state as their 1st argument\n    getters: {\n        // https://vuex.vuejs.org/guide/getters.html#method-style-access\n        getProductBySlug(state) {\n            return function (slug) {\n                return _.find(state.products, { 'slug': slug })\n                //return state.products.find(product => product.id == id);\n            }\n        }\n    }\n})"]}]}