{"remainingRequest":"/opt/lampp/htdocs/web/puzzles2/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/web/puzzles2/node_modules/eslint-loader/index.js??ref--13-0!/opt/lampp/htdocs/web/puzzles2/src/Cart.js","dependencies":[{"path":"/opt/lampp/htdocs/web/puzzles2/src/Cart.js","mtime":1577694906111},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9vcHQvbGFtcHAvaHRkb2NzL3dlYi9wdXp6bGVzMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9vcHQvbGFtcHAvaHRkb2NzL3dlYi9wdXp6bGVzMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwoKLy8gL3NyYy9DYXJ0LmpzCnZhciBDYXJ0ID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgLyoqCiAgICogCiAgICovCiAgZnVuY3Rpb24gQ2FydCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDYXJ0KTsKCiAgICAvLyBFeHRyYWN0IEpTT04gY2FydCBzdHJpbmcgZnJvbSBsb2NhbCBzdG9yYWdlCiAgICB2YXIgY2FydCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjYXJ0Jyk7IC8vIFBhcnNlIEpTT04gY2FydCBTdHJpbmcgdG8gYGl0ZW1zYCBvYmplY3QKCiAgICB0aGlzLml0ZW1zID0gY2FydCA/IEpTT04ucGFyc2UoY2FydCkgOiBbXTsKICB9CiAgLyoqCiAgICogR2V0dGVyIG1ldGhvZCBmb3IgaXRlbXMKICAgKi8KCgogIF9jcmVhdGVDbGFzcyhDYXJ0LCBbewogICAga2V5OiAiZ2V0SXRlbXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEl0ZW1zKCkgewogICAgICByZXR1cm4gdGhpcy5pdGVtczsKICAgIH0KICAgIC8qKgogICAgICogUmV0dXJucyBob3cgbWFueSB0b3RhbCBpdGVtcyBhcmUgaW4gdGhlIGNhcnQKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJjb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY291bnQoKSB7CiAgICAgIHZhciBzdW0gPSAwOwoKICAgICAgZm9yICh2YXIgX2kgPSAwLCBfT2JqZWN0JGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLml0ZW1zKTsgX2kgPCBfT2JqZWN0JGtleXMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgdmFyIGtleSA9IF9PYmplY3Qka2V5c1tfaV07CiAgICAgICAgc3VtICs9IHRoaXMuaXRlbXNba2V5XS5xdWFudGl0eTsKICAgICAgfQoKICAgICAgcmV0dXJuIHN1bTsKICAgIH0KICAgIC8qKgogICAgICogVXBkYXRlcyBjYXJ0IGluIGxvY2Fsc3RvcmFnZQogICAgICovCgogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY2FydCcsIEpTT04uc3RyaW5naWZ5KHRoaXMuaXRlbXMpKTsKICAgIH0KICAgIC8qKgogICAgICogQWRkIGEgbmV3IGl0ZW0gb2YgdGhlIGdpdmVuIHNsdWcKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJhZGQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZChzbHVnKSB7CiAgICAgIHZhciBxdWFudGl0eSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMTsKICAgICAgLy8gRmlyc3Qgc2VlIGlmIHByb2R1Y3QgaXMgYWxyZWFkeSBwcmVzZW50CiAgICAgIHZhciBpdGVtID0gdGhpcy5nZXRJdGVtKHNsdWcpOwoKICAgICAgaWYgKGl0ZW0pIHsKICAgICAgICAvLyBQcm9kdWN0IGlzIGluIGNhcnQgYWxyZWFkeTsgaW5jcmVtZW50IHF1YW50aXR5IGJ5IDEKICAgICAgICBpdGVtLnF1YW50aXR5ICs9IHF1YW50aXR5OwogICAgICB9IGVsc2UgewogICAgICAgIC8vIFByb2R1Y3Qgbm90IGluIGNhcnQsIGFkZCBhcyBuZXcgaXRlbQogICAgICAgIHRoaXMuaXRlbXMucHVzaCh7CiAgICAgICAgICBzbHVnOiBzbHVnLAogICAgICAgICAgcXVhbnRpdHk6IHF1YW50aXR5CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHRoaXMudXBkYXRlKCk7CiAgICB9CiAgICAvKioKICAgICAqIFJlbW92ZSBhbiBpdGVtIGZyb20gaXRlbXMgdmlhIHNsdWcKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJyZW1vdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZShzbHVnKSB7CiAgICAgIHZhciBpdGVtID0gdGhpcy5nZXRJdGVtKHNsdWcpOwogICAgICB2YXIgaXRlbUluZGV4ID0gdGhpcy5pdGVtcy5pbmRleE9mKGl0ZW0pOwoKICAgICAgaWYgKGl0ZW0pIHsKICAgICAgICB0aGlzLml0ZW1zLnNwbGljZShpdGVtSW5kZXgsIDEpOwogICAgICAgIHRoaXMudXBkYXRlKCk7CiAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogR2V0IGFuIGl0ZW0gZnJvbSBpdGVtcyB2aWEgc2x1ZwogICAgICogUmV0dXJucyBudWxsIGlmIHByb2R1Y3QgZG9lcyBub3QgZXhpc3QgaW4gaXRlbXMKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJnZXRJdGVtIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJdGVtKHByb2R1Y3RTbHVnKSB7CiAgICAgIHJldHVybiB0aGlzLml0ZW1zLmZpbmQoZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgc2x1ZyA9IF9yZWYuc2x1ZzsKICAgICAgICByZXR1cm4gc2x1ZyA9PT0gcHJvZHVjdFNsdWc7CiAgICAgIH0pIHx8IG51bGw7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQ2FydDsKfSgpOwoKZXhwb3J0IHsgQ2FydCBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/opt/lampp/htdocs/web/puzzles2/src/Cart.js"],"names":["Cart","cart","localStorage","getItem","items","JSON","parse","sum","Object","keys","key","quantity","setItem","stringify","slug","item","push","update","itemIndex","indexOf","splice","productSlug","find"],"mappings":";;;;;;;AAAA;IACqBA,I;;;AAEjB;;;AAGA,kBAAc;AAAA;;AACV;AACA,QAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAFU,CAIV;;AACA,SAAKC,KAAL,GAAcH,IAAD,GAASI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAT,GAA4B,EAAzC;AACH;AAED;;;;;;;+BAGW;AACP,aAAO,KAAKG,KAAZ;AACH;AAED;;;;;;4BAGQ;AACJ,UAAIG,GAAG,GAAG,CAAV;;AACA,sCAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAjB,CAAhB,kCAAyC;AAApC,YAAIM,GAAG,mBAAP;AACDH,QAAAA,GAAG,IAAI,KAAKH,KAAL,CAAWM,GAAX,EAAgBC,QAAvB;AACH;;AACD,aAAOJ,GAAP;AACH;AAED;;;;;;6BAGS;AACLL,MAAAA,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAe,KAAKT,KAApB,CAA7B;AACH;AAED;;;;;;wBAGIU,I,EAAoB;AAAA,UAAdH,QAAc,uEAAH,CAAG;AAEpB;AACA,UAAII,IAAI,GAAG,KAAKZ,OAAL,CAAaW,IAAb,CAAX;;AAEA,UAAIC,IAAJ,EAAU;AACN;AACAA,QAAAA,IAAI,CAACJ,QAAL,IAAiBA,QAAjB;AAEH,OAJD,MAIO;AACH;AACA,aAAKP,KAAL,CAAWY,IAAX,CAAgB;AACZF,UAAAA,IAAI,EAAEA,IADM;AAEZH,UAAAA,QAAQ,EAAEA;AAFE,SAAhB;AAIH;;AAED,WAAKM,MAAL;AACH;AAED;;;;;;2BAGOH,I,EAAM;AACT,UAAIC,IAAI,GAAG,KAAKZ,OAAL,CAAaW,IAAb,CAAX;AAEA,UAAII,SAAS,GAAG,KAAKd,KAAL,CAAWe,OAAX,CAAmBJ,IAAnB,CAAhB;;AAEA,UAAIA,IAAJ,EAAU;AACN,aAAKX,KAAL,CAAWgB,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;AACA,aAAKD,MAAL;AACH;AACJ;AAED;;;;;;;4BAIQI,W,EAAa;AACjB,aAAO,KAAKjB,KAAL,CAAWkB,IAAX,CAAgB;AAAA,YAAGR,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAI,KAAKO,WAAvB;AAAA,OAAhB,KAAuD,IAA9D;AACH;;;;;;SAjFgBrB,I","sourcesContent":["// /src/Cart.js\nexport default class Cart {\n\n    /**\n     * \n     */\n    constructor() {\n        // Extract JSON cart string from local storage\n        let cart = localStorage.getItem('cart');\n\n        // Parse JSON cart String to `items` object\n        this.items = (cart) ? JSON.parse(cart) : [];\n    }\n\n    /**\n     * Getter method for items\n     */\n    getItems() {\n        return this.items;\n    }\n\n    /**\n     * Returns how many total items are in the cart\n     */\n    count() {\n        let sum = 0;\n        for (let key of Object.keys(this.items)) {\n            sum += this.items[key].quantity;\n        }\n        return sum;\n    }\n\n    /**\n     * Updates cart in localstorage\n     */\n    update() {\n        localStorage.setItem('cart', JSON.stringify(this.items))\n    }\n\n    /**\n     * Add a new item of the given slug\n     */\n    add(slug, quantity = 1) {\n\n        // First see if product is already present\n        let item = this.getItem(slug)\n\n        if (item) {\n            // Product is in cart already; increment quantity by 1\n            item.quantity += quantity;\n\n        } else {\n            // Product not in cart, add as new item\n            this.items.push({\n                slug: slug,\n                quantity: quantity\n            });\n        }\n\n        this.update();\n    }\n\n    /**\n     * Remove an item from items via slug\n     */\n    remove(slug) {\n        let item = this.getItem(slug);\n\n        let itemIndex = this.items.indexOf(item);\n\n        if (item) {\n            this.items.splice(itemIndex, 1);\n            this.update();\n        }\n    }\n\n    /**\n     * Get an item from items via slug\n     * Returns null if product does not exist in items\n     */\n    getItem(productSlug) {\n        return this.items.find(({ slug }) => slug === productSlug) || null;\n    }\n}"]}]}