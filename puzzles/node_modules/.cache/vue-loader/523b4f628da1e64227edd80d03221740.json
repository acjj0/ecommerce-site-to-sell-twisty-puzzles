{"remainingRequest":"/opt/lampp/htdocs/web/puzzles2/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/web/puzzles2/src/components/pages/ProductPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/web/puzzles2/src/components/pages/ProductPage.vue","mtime":1577694906115},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGFwcCBmcm9tICcuLy4uLy4uL2FwcC5qcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnUHJvZHVjdFBhZ2UnLAogICAgcHJvcHM6IFsnc2x1ZyddLAogICAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYWRkQWxlcnQ6IGZhbHNlCiAgICAgICAgfTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIHByb2R1Y3Q6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRQcm9kdWN0QnlTbHVnKHRoaXMuc2x1Zyk7CiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7fSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhZGRUb0NhcnQ6IGZ1bmN0aW9uKHByb2R1Y3RJZCkgewogICAgICAgICAgICBsZXQgY2FydCA9IG5ldyBhcHAuQ2FydCgpOwogICAgICAgICAgICBjYXJ0LmFkZChwcm9kdWN0SWQpOwoKICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRDYXJ0Q291bnQnLCBjYXJ0LmNvdW50KCkpOwoKICAgICAgICAgICAgdGhpcy5hZGRBbGVydCA9IHRydWU7CgogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+ICh0aGlzLmFkZEFsZXJ0ID0gZmFsc2UpLCAyMDAwKTsKICAgICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"sources":["ProductPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA","file":"ProductPage.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n    <div id='product-page' v-if='product'>\n        <h1 data-test='product-name'>{{ product.name }}</h1>\n        <img\n            v-if='product.slug'\n            class='product-thumb'\n            :alt='\"Product image of  \" + product.name'\n            :src='product.slug | productImage'\n        />\n        <p class='description'>{{ product.description }}</p>\n        <div class='price'>${{ product.price }}</div>\n\n        <button data-test='add-to-cart-button' @click='addToCart(product.slug)'>Add to cart</button>\n\n        <transition name='fade'>\n            <div\n                class='alert'\n                data-test='add-to-cart-confirmation'\n                v-if='addAlert'\n            >Your cart has been updated!</div>\n        </transition>\n\n        <router-link :to='\"/products\"'>&larr; Return to all products</router-link>\n    </div>\n</template>\n\n<script>\nimport * as app from './../../app.js';\n\nexport default {\n    name: 'ProductPage',\n    props: ['slug'],\n    data: function() {\n        return {\n            addAlert: false\n        };\n    },\n    computed: {\n        product: function() {\n            return this.$store.getters.getProductBySlug(this.slug);\n        }\n    },\n    mounted() {},\n    methods: {\n        addToCart: function(productId) {\n            let cart = new app.Cart();\n            cart.add(productId);\n\n            this.$store.commit('setCartCount', cart.count());\n\n            this.addAlert = true;\n\n            setTimeout(() => (this.addAlert = false), 2000);\n        }\n    }\n};\n</script>\n\n<style scoped>\n</style>"]}]}