{"remainingRequest":"/opt/lampp/htdocs/web/puzzles2/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/web/puzzles2/src/components/pages/ProductCreatePage.vue?vue&type=style&index=0&id=baf4ae22&scoped=true&lang=css&","dependencies":[{"path":"/opt/lampp/htdocs/web/puzzles2/src/components/pages/ProductCreatePage.vue","mtime":1577694906115},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNkZXNjcmlwdGlvbiB7CiAgICBoZWlnaHQ6IDE1MHB4Owp9Cg=="},{"version":3,"sources":["ProductCreatePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8LA;AACA;AACA","file":"ProductCreatePage.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n    <div id='product-create'>\n        <h1>Add a Product</h1>\n        <form @submit.prevent='handleSubmit'>\n            <div class='form-group'>\n                <label for='name'>URL</label>\n                <input\n                    type='text'\n                    :class='{ \"form-input-error\": $v.product.slug.$error }'\n                    id='slug'\n                    data-test='product-slug-input'\n                    v-model='$v.product.slug.$model'\n                />\n\n                <div v-if='$v.product.slug.$error'>\n                    <div\n                        class='form-feedback-error'\n                        v-if='!$v.product.slug.required'\n                    >Product URL is required.</div>\n                    <div\n                        class='form-feedback-error'\n                        v-else-if='!$v.product.slug.minLength'\n                    >Product URL must be at least 4 characters long.</div>\n\n                    <div\n                        class='form-feedback-error'\n                        v-else-if='!$v.product.slug.doesNotExist'\n                    >This URL is not available.</div>\n                </div>\n\n                <small class='form-help'>Min: 4</small>\n            </div>\n\n            <div class='form-group'>\n                <label for='name'>Name</label>\n                <input\n                    type='text'\n                    :class='{ \"form-input-error\": $v.product.name.$error }'\n                    data-test='product-name-input'\n                    id='name'\n                    v-model='$v.product.name.$model'\n                />\n                <div v-if='$v.product.name.$error'>\n                    <div\n                        class='form-feedback-error'\n                        v-if='!$v.product.name.required'\n                    >Product name is required.</div>\n                </div>\n            </div>\n\n            <div class='form-group'>\n                <label for='description'>Description</label>\n                <textarea\n                    data-test='product-description-textarea'\n                    id='description'\n                    v-model='product.description'\n                ></textarea>\n            </div>\n\n            <div class='form-group'>\n                <label for='price'>Price</label>\n                <input\n                    type='text'\n                    data-test='product-price-input'\n                    id='price'\n                    v-model='product.price'\n                />\n            </div>\n\n            <div class='form-group'>\n                <label for='weight'>Weight</label>\n                <input\n                    type='text'\n                    data-test='product-weight-input'\n                    id='weight'\n                    v-model='product.weight'\n                />\n                <small class='form-help'>Decimal value in lbs.</small>\n            </div>\n\n            <div class='form-group'>\n                <label for='categories'>Categories</label>\n\n                <input\n                    type='text'\n                    id='categories'\n                    data-test='product-categories-input'\n                    v-model='product.categories'\n                />\n                <small id='categoriesHelp' class='form-help'>Comma separated</small>\n            </div>\n\n            <div class='form-group'>\n                <label class='form-checkbox-label'>\n                    <input\n                        type='checkbox'\n                        data-test='product-perishable-checkbox'\n                        v-model='product.perishable'\n                    /> Perishable\n                </label>\n            </div>\n\n            <button data-test='add-product-button' type='submit'>Add Product</button>\n\n            <div class='form-feedback-error' v-if='formHasErrors'>Please correct the above errors</div>\n        </form>\n    </div>\n</template>\n\n<script>\nimport * as app from './../../app.js';\nimport { required, minLength } from 'vuelidate/lib/validators';\n\nlet product = {};\n// If in dev mode, we'll pre-fill the product to make demo/testing easier\nif (process.env.NODE_ENV == 'development') {\n    product = {\n        slug: 'indiana-gourmet-kettlecorn-popcorn',\n        name: 'Indiana Gourmet Kettlecorn Popcorn',\n        description:\n            'We combine the finest popping corn, the right amount of salt and pure sugar cane, then we heat it just right, so that the sugar is melting just as the corn starts to pop—leaving every piece with a thin shell of salty sweetness. Be careful, it’s hard to eat just one bite of our handcrafted, gluten free Original Kettlecorn. Munch Better.',\n        price: 4.49,\n        weight: 0.44,\n        perishable: false,\n        categories: ['snacks', 'gluten-free']\n    };\n} else {\n    product = {\n        slug: '',\n        name: '',\n        description: '',\n        price: '',\n        weight: '',\n        perishable: false,\n        categories: []\n    };\n}\n\nexport default {\n    name: 'ProductCreatePage',\n    data: function() {\n        return {\n            product: product,\n            formHasErrors: false\n        };\n    },\n    validations: {\n        product: {\n            slug: {\n                required,\n                minLength: minLength(4),\n                doesNotExist(value) {\n                    return !this.$store.getters.getProductBySlug(value);\n                }\n            },\n            name: {\n                required\n            }\n        }\n    },\n    watch: {\n        '$v.$anyError': function() {\n            this.formHasErrors = this.$v.$anyError;\n        }\n    },\n    methods: {\n        handleSubmit: function() {\n            if (!this.formHasErrors) {\n                // Axios request to the server to persist the new product\n                app.axios\n                    .post(app.config.api + 'products.json', this.product)\n                    .then(response => {\n                        let key = response.data.name;\n\n                        this.$store.commit('addProduct', {\n                            [key]: this.product\n                        });\n\n                        this.$router.push({\n                            name: 'product',\n                            params: { slug: this.product.slug }\n                        });\n                    });\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n#description {\n    height: 150px;\n}\n</style>"]}]}