{"remainingRequest":"/opt/lampp/htdocs/web/puzzles2/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/web/puzzles2/src/components/pages/CategoriesPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/web/puzzles2/src/components/pages/CategoriesPage.vue","mtime":1577694906115},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/web/puzzles2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0ICogYXMgYXBwIGZyb20gJy4vLi4vLi4vYXBwLmpzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdDYXRlZ29yaWVzUGFnZScsCiAgICBkYXRhOiBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4ge307CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBwcm9kdWN0czogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5wcm9kdWN0czsKICAgICAgICB9LAogICAgICAgIC8vIExvYWQgY2F0ZWdvcmllcyB2aWEgYSBjb21wdXRlZCBwcm9wZXJ0eTsgYmVjYXVzZSBpdCBkZXBlbmRzIG9uIGBwcm9kdWN0c2AKICAgICAgICAvLyBpdCB3aWxsIHJlYWN0aXZlbHkgYmUgbG9hZGVkIG9uY2UgYHByb2R1Y3RzYCBpcyByZWFkeQogICAgICAgIGNhdGVnb3JpZXM6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICBsZXQgY2F0ZWdvcmllcyA9IF8ubWFwKHRoaXMucHJvZHVjdHMsICdjYXRlZ29yaWVzJyk7CiAgICAgICAgICAgIGxldCBtZXJnZWRDYXRlZ29yaWVzID0gW10uY29uY2F0LmFwcGx5KFtdLCBjYXRlZ29yaWVzKTsKCiAgICAgICAgICAgIC8vIFJldHVybiB1bmlxdWUsIHNvcnRlZCBjYXRlZ29yaWVzCiAgICAgICAgICAgIHJldHVybiBbLi4ubmV3IFNldChtZXJnZWRDYXRlZ29yaWVzKV0uc29ydCgpOwogICAgICAgIH0KICAgIH0KfTsK"},{"version":3,"sources":["CategoriesPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CategoriesPage.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n    <div>\n        <h2>Categories</h2>\n        <ul class='cleanList'>\n            <li\n                data-test='category-name'\n                v-for='(category, id) in categories'\n                :key='id'\n            >{{ category }}</li>\n        </ul>\n    </div>\n</template>\n\n<script>\n//import * as app from './../../app.js';\n\nexport default {\n    name: 'CategoriesPage',\n    data: function() {\n        return {};\n    },\n    computed: {\n        products: function() {\n            return this.$store.state.products;\n        },\n        // Load categories via a computed property; because it depends on `products`\n        // it will reactively be loaded once `products` is ready\n        categories: function() {\n            let categories = _.map(this.products, 'categories');\n            let mergedCategories = [].concat.apply([], categories);\n\n            // Return unique, sorted categories\n            return [...new Set(mergedCategories)].sort();\n        }\n    }\n};\n</script>\n\n<style scoped>\n</style>"]}]}